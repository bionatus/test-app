name: PUSH Workflow
on:
  push:
    branches:
      - develop
      - demo
      - uat
      - staging
      - qa
      - qa2
    paths-ignore:
      - 'changelog.md'
jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.26
        env:
          MYSQL_DATABASE: test
          MYSQL_HOST: 127.0.0.1
          MYSQL_PASSWORD: root
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "copy('.env.testing.github', '.env.testing');"
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, bcmath, grpc
      - name: add execution permisions
        run: chmod +x .github/scripts/install-php-heic.sh
      - name: install extension
        run: sudo bash .github/scripts/install-php-heic.sh > /dev/null
      - name: restart FPM
        run: sudo service php8.1-fpm restart
      - name: check install heic
        run: php -r 'phpinfo();' | grep HEIC
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generating jwt token
        run: php artisan jwt:secret --force --env=testing
      - name: Generating key
        run: php artisan key:generate --env=testing
      - name: Artisan clear
        run: php artisan clear
      - name: Clear cache config
        run: php artisan config:clear
      - name: Execute tests
        run: php artisan test --env=testing


  deploy-develop:
    name: Deploy Project to DEVELOP
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    environment: development
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          username: ${{ secrets.SSH_USERNAME_STAGING }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_STAGING }}
            php artisan down
            git checkout -f
            git pull origin develop
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_STAGING }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-cp-develop:
    name: Deploy Project to CP DEVELOP
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    if: github.ref == 'refs/heads/cp-develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_CP_DEVELOP }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING_V2 }}
          username: ${{ secrets.SSH_USERNAME_STAGING_V2 }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_STAGING_V2 }}
            php artisan down
            git checkout -f
            git pull origin cp-develop
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_STAGING }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-cp-uat:
    name: Deploy Project to CP UAT
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    if: github.ref == 'refs/heads/cp-uat'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_CP_UAT }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING_V2 }}
          username: ${{ secrets.SSH_USERNAME_STAGING_V2 }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_STAGING_V2 }}
            php artisan down
            git checkout -f
            git pull origin cp-uat
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_STAGING }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-demo:
    name: Deploy Project to DEMO
    runs-on: ubuntu-latest
    needs: [app-tests]
    if: github.ref == 'refs/heads/demo'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEMO }}
          key: ${{ secrets.SSH_PRIVATE_KEY_UAT }}
          username: ${{ secrets.SSH_USERNAME_UAT }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_DEMO }}
            php artisan down
            git checkout -f
            git pull origin demo
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_DEMO }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-staging:
    name: Deploy Project to Staging
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_STAGING_V2 }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING_V2 }}
          username: ${{ secrets.SSH_USERNAME_STAGING_V2 }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_STAGING_V2 }}
            php artisan down
            git checkout -f
            git pull origin staging
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_STAGING_V2 }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-uat:
    name: Deploy Project to UAT
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    if: github.ref == 'refs/heads/uat'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          command_timeout: 30m
          host: ${{ secrets.SSH_HOST_UAT }}
          key: ${{ secrets.SSH_PRIVATE_KEY_UAT }}
          username: ${{ secrets.SSH_USERNAME_UAT }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_UAT }}
            php artisan down
            git checkout -f
            git pull origin uat
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_UAT }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-qa:
    name: Deploy Project to QA
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    environment: qa
    if: github.ref == 'refs/heads/qa'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          command_timeout: 50m
          host: ${{ secrets.SSH_HOST_QA }}
          key: ${{ secrets.SSH_PRIVATE_KEY_QA }}
          username: ${{ secrets.SSH_USERNAME_QA }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_QA }}
            php artisan down
            git checkout -f
            git pull origin qa
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_QA }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deploy-qa2:
    name: Deploy Project to QA2
    runs-on: ubuntu-latest
    needs: [ app-tests ]
    if: github.ref == 'refs/heads/qa2'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn
      - name: Setup VPN config
        run: |
          echo "${{ secrets.OPENVPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.OPENVPN_USER_CRT }}" > user.crt
          echo "${{ secrets.OPENVPN_USER_KEY }}" > user.key
          echo "${{ secrets.OPENVPN_USER_NAME }}" > secret.txt
          echo "${{ secrets.OPENVPN_PIN }}" >> secret.txt
          echo "${{ secrets.OPENVPN_TLS_KEY }}" > tls.key
      - name: Connect VPN with credentials
        run: sudo openvpn --config .github/vpn/config.ovpn --log vpn.log --daemon
      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 bluon.com; do sleep 2; done
      - name: Get public IP
        run: curl ifconfig.me
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          command_timeout: 50m
          host: ${{ secrets.SSH_HOST_QA2 }}
          key: ${{ secrets.SSH_PRIVATE_KEY_QA }}
          username: ${{ secrets.SSH_USERNAME_QA }}
          script_stop: true
          script: |
            supervisorctl stop all
            cd ${{ secrets.ROOT_QA }}
            php artisan down
            git checkout -f
            git pull origin qa2
            composer install --prefer-dist --no-interaction
            php artisan migrate -vv
            php artisan db:seed --class=DevelopmentSeeder
            echo ${{ github.sha }}  > ${{ secrets.ROOT_QA }}/public/version.txt
            php artisan config:clear
            php artisan queue:restart
            php artisan up
            supervisorctl reload
      - name: Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
